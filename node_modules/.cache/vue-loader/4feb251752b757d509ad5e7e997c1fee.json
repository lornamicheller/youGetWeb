{"remainingRequest":"/Users/joelalejandro/Downloads/live-map/YouGet 30 sep/youGetWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/joelalejandro/Downloads/live-map/YouGet 30 sep/youGetWeb/src/views/uploadPicture.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/joelalejandro/Downloads/live-map/YouGet 30 sep/youGetWeb/src/views/uploadPicture.vue","mtime":1569876069000},{"path":"/Users/joelalejandro/Downloads/live-map/YouGet 30 sep/youGetWeb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/joelalejandro/Downloads/live-map/YouGet 30 sep/youGetWeb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/joelalejandro/Downloads/live-map/YouGet 30 sep/youGetWeb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/joelalejandro/Downloads/live-map/YouGet 30 sep/youGetWeb/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Parse from \"parse\";\n\nexport default {\n  data() {\n    return {\n      driverInfo: null,\n      picture: null\n    };\n  },\n  mounted: function() {\n    Parse.serverURL = \"https://parseapi.back4app.com\"; // This is your Server URL\n    Parse.initialize(\n      \"HTzPuPz4IAwcYAhYj96i6rD8hdzfsGuPzppMAlOJ\", // This is your Application ID\n      \"rKRxSPX035PcdC3bZi919Se3CsSufijmjbfni8xd\" // This is your Javascript key\n      // 'ijcYK0Uitub8QGrTERUTkwOSVW6FKZw1q1sgYMPH' // This is your Master key (never use it in the frontend)\n    );\n\n    this.driverInfo = this.$route.params.data;\n    console.log(\"Info\", this.driverInfo);\n  },\n  methods: {\n    register() {},\n    registerAccount() {},\n    onFileSelected(event) {\n      var self = this;\n      const toBase64 = file =>\n        new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(file);\n          reader.onload = () => resolve(reader.result);\n          reader.onerror = error => reject(error);\n        });\n\n      async function Main() {\n        const file = document.querySelector(\".custom-file-input\").files[0];\n\n        self.picture = await toBase64(file);\n        //console.log(self.picture);\n        console.log(\"we have image data, proceed to upload and save it...\");\n\n        const base64Image = self.picture;\n        const name = \"photo.jpeg\";\n        const parseFile = new Parse.File(name, {\n          base64: base64Image\n        });\n\n        // convierte la foto a base64\n        parseFile.save().then(\n          savedFile => {\n            console.log(\"file saved: \" + savedFile.url());\n            //console.log('file saved:' + savedFile);\n\n            self.picture = savedFile;\n            //console.log(self.picture.url());\n            // this.savedPhoto = savedFile;\n          },\n          err => {\n            console.log(\"error grabando file: \" + err);\n            alert(err);\n          }\n        );\n\n        //console.log(self.picture);\n      }\n\n      Main();\n    },\n    setPhoto() {\n      let foto = this.picture;\n      this.$router.push({ name: \"businessInfo\", params: { foto } });\n    }\n  }\n};\n",{"version":3,"sources":["uploadPicture.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"uploadPicture.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"container animated bounceInDown\">\n      <div class=\"wrapper\">\n        <img class=\"upload-img\" src=\"../assets/icono tiendas.png\" />\n      </div>\n      <h1 class=\"title-img text-center mt-2\">Upload Business</h1>\n      <h1 class=\"title-img text-center\">Photo/Logo</h1>\n    </div>\n    <div class=\"text-center animated fadeInLeftBig\">\n      <label class=\"btn btn-primary icon\">\n        Upload Picture\n        <input\n          @change=\"onFileSelected\"\n          type=\"file\"\n          class=\"custom-file-input\"\n          style=\"display: none;\"\n          name=\"image\"\n        />\n      </label>\n    </div>\n    <div class=\"text-center animated fadeInRightBig\">\n      <!-- <router-link to=\"/businessInfo\"> -->\n      <button type=\"submit\" @click=\"setPhoto()\" class=\"btn btn-primary continue-btn\">Continue</button>\n      <!-- </router-link> -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport Parse from \"parse\";\n\nexport default {\n  data() {\n    return {\n      driverInfo: null,\n      picture: null\n    };\n  },\n  mounted: function() {\n    Parse.serverURL = \"https://parseapi.back4app.com\"; // This is your Server URL\n    Parse.initialize(\n      \"HTzPuPz4IAwcYAhYj96i6rD8hdzfsGuPzppMAlOJ\", // This is your Application ID\n      \"rKRxSPX035PcdC3bZi919Se3CsSufijmjbfni8xd\" // This is your Javascript key\n      // 'ijcYK0Uitub8QGrTERUTkwOSVW6FKZw1q1sgYMPH' // This is your Master key (never use it in the frontend)\n    );\n\n    this.driverInfo = this.$route.params.data;\n    console.log(\"Info\", this.driverInfo);\n  },\n  methods: {\n    register() {},\n    registerAccount() {},\n    onFileSelected(event) {\n      var self = this;\n      const toBase64 = file =>\n        new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(file);\n          reader.onload = () => resolve(reader.result);\n          reader.onerror = error => reject(error);\n        });\n\n      async function Main() {\n        const file = document.querySelector(\".custom-file-input\").files[0];\n\n        self.picture = await toBase64(file);\n        //console.log(self.picture);\n        console.log(\"we have image data, proceed to upload and save it...\");\n\n        const base64Image = self.picture;\n        const name = \"photo.jpeg\";\n        const parseFile = new Parse.File(name, {\n          base64: base64Image\n        });\n\n        // convierte la foto a base64\n        parseFile.save().then(\n          savedFile => {\n            console.log(\"file saved: \" + savedFile.url());\n            //console.log('file saved:' + savedFile);\n\n            self.picture = savedFile;\n            //console.log(self.picture.url());\n            // this.savedPhoto = savedFile;\n          },\n          err => {\n            console.log(\"error grabando file: \" + err);\n            alert(err);\n          }\n        );\n\n        //console.log(self.picture);\n      }\n\n      Main();\n    },\n    setPhoto() {\n      let foto = this.picture;\n      this.$router.push({ name: \"businessInfo\", params: { foto } });\n    }\n  }\n};\n</script>\n\n<style scoped>\n@import url(\"https://fonts.googleapis.com/css?family=Poppins:200,300,400,500,600,700&display=swap\");\n\n.upload-img {\n  height: 180px;\n  width: 180px;\n  border-radius: 50%;\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 150px;\n}\n\n.title-img {\n  font-size: 17px;\n  font-weight: 300;\n  font-family: \"Poppins\", sans-serif;\n}\n\n.icon {\n  border: none;\n  height: 55px;\n  width: 300px;\n  border-radius: 25px;\n  margin-top: 50px;\n  background: #231f20;\n  font-weight: 300;\n  font-size: 13px;\n  font-family: \"Poppins\", sans-serif;\n  font-family: \"Poppins\", sans-serif;\n  cursor: pointer;\n  padding-top: 18px;\n  transition: 0.5s;\n}\n\n.icon:hover {\n  background: #0f0e0e;\n  /* border-color: #d6d6d6; */\n  /* box-shadow: 0 8px 6px -6px black; */\n}\n\n.continue-btn {\n  border: none;\n  height: 55px;\n  width: 300px;\n  border-radius: 25px;\n  margin-top: 5px;\n  background: #ed1c24;\n  font-weight: 300;\n  font-size: 13px;\n  font-family: \"Poppins\", sans-serif;\n  transition: 0.5s;\n}\n\n.continue-btn:hover {\n  background: #c7161c;\n}\n</style>"]}]}